[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = '''has('python3')'''
depends = ['nvim-yarp', 'vim-hug-neovim-rpc']
on_event = ['InsertEnter']
hook_source = '''
    call deoplete#initialize()
    call deoplete#custom#option({
        \ 'smart_case': v:true,
        \ 'skip_multibyte': v:true,
        \ 'num_processes': 6,
        \ })
    call deoplete#custom#option('keyword_patterns', {
        \ 'php': '\k+',
        \ 'markdown': '\\?[a-zA-Z_]+',
        \ })
    call deoplete#custom#source('_', 'converters', [
        \ 'converter_remove_overlap',
        \ 'converter_truncate_abbr',
        \ 'converter_truncate_menu',
        \ ])
    call deoplete#custom#option('sources', {
        \ 'go': ['neosnippet', 'lsp', 'file'],
        \ 'php': ['neosnippet', 'lsp', 'file'],
        \ 'python': ['neosnippet', 'lsp', 'file', 'around'],
        \ })
    call deoplete#enable()
'''

[[plugins]]
repo = 'Shougo/neco-syntax'
on_source = 'deoplete.nvim'

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = 'neosnippet-snippets'
on_event = ['InsertEnter']

[[plugins]]
repo = 'Shougo/neomru.vim'
on_source = ['denite.nvim']

[[plugins]]
repo = 'basyura/Tweetvim'
depends = ['webapi-vim', 'open-browser.vim', 'twibill.vim']
on_cmd = ['TweetVimSay', 'TweetVimCommandSay', 'TweetVimHomeTimeline']

[[plugins]]
repo = 'mattn/vim-goimports'
on_ft = 'go'

[[plugins]]
repo = 'previm/previm'
on_ft = 'markdown'

[[plugins]]
repo = 'tyru/open-browser.vim'
on_source = 'previm'

[[plugins]]
repo = 'tyru/capture.vim'
on_cmd = ['Capture']

[[plugins]]
repo = 'Shougo/defx.nvim'
if = '''has('python3')'''
on_source = 'denite.nvim'
depends = ['nvim-yarp', 'vim-hug-neovim-rpc']
hook_source = '''
call defx#custom#column('icon', {
    \ 'directory_icon': '▸',
    \ 'opened_icon': '▾',
    \ 'root_icon': ' ',
    \ })
'''

[[plugins]]
repo = 'lighttiger2505/deoplete-vim-lsp'
on_source = 'deoplete.nvim'
hook_source = '''
let g:deoplete#sources#vim_lsp#show_info = 1
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
if = '''has('python3')'''
on_cmd = 'Denite'
depends = ['nvim-yarp', 'vim-hug-neovim-rpc']
hook_source = '''
call denite#custom#var('grep', {
    \ 'command': ['rg'],
    \ 'default_opts': ['-i', '--vimgrep', '--no-heading'],
    \ 'recursive_opts': [],
    \ 'pattern_opt': ['--regexp'],
    \ 'separator': ['--'],
    \ 'final_opts': [],
    \ })
call denite#custom#var('file/rec', 'command',
    \ ['rg', '--files', '--glob', '!.git', '--color', 'never'])
call denite#custom#var('outline', 'ignore_types', ['v', 's', 'm'])
if has('nvim')
call denite#custom#option('default', {
    \ 'source_names': 'short'})
endif
'''

[[plugins]]
repo = 'rhysd/git-messenger.vim'
on_cmd = 'GitMessenger'

[[plugins]]
repo = 'google/vim-jsonnet'
on_ft = 'jsonnet'
